package com.crf.run;

import java.util.List;
import java.util.Set;

import com.crf.filters.CRFFilteredFeature;
import com.utilities.TaggedToken;

/**
 * Generates set of features to be used by the CRF algorithm for training and inference of {@link CRFPosTagger}.
 * @author 1001937
 *
 * @param <K>
 * @param <G>
 */
public abstract class CRFFeatureGenerator <K,G>{
	
	protected final Iterable<? extends List<? extends TaggedToken<K,G>>> corpus;
	protected final Set<G> tags; 
	
	public CRFFeatureGenerator(Iterable<? extends List<? extends TaggedToken<K,G>>> corpus, Set<G>tags){
		super();
		this.corpus = corpus;
		this.tags = tags;
	}
	
	/**
	 * Generate the features (to be lated retrieved by {@link #getFeatures()}).
	 */
	public abstract void generateFeatures();
	
	/**
	 * Return the set of features earlier generated by {@link #generateFeatures()}.
	 * @return the set of features earlier generated by {@link #generateFeatures()}.
	 */
	public abstract Set<CRFFilteredFeature<K, G>> getFeatures();
}
